From 2685e6d9c8dd9f0d4fcddc2ed49195b6372a63ac Mon Sep 17 00:00:00 2001
From: Summer Qin <summer.qin@arm.com>
Date: Wed, 28 Jul 2021 11:16:11 +0800
Subject: [PATCH 2/4] Enable Crypto 1.0 test cases

psa_cipher_encrypt(), psa_cipher_decrypt(), psa_sign_message(),
psa_verify_message(), psa_mac_compute() and psa_mac_verify() are
supported now in tfm and mbedtls-3.0.0.
Enable the test case for them.

Signed-off-by: Summer Qin <summer.qin@arm.com>
---
 api-tests/dev_apis/crypto/common/test_crypto_common.h  |  2 ++
 .../targets/common/nspe/crypto/pal_crypto_intf.c       | 10 ----------
 2 files changed, 2 insertions(+), 10 deletions(-)

diff --git a/api-tests/dev_apis/crypto/common/test_crypto_common.h b/api-tests/dev_apis/crypto/common/test_crypto_common.h
index c213b7d..b1c6e65 100644
--- a/api-tests/dev_apis/crypto/common/test_crypto_common.h
+++ b/api-tests/dev_apis/crypto/common/test_crypto_common.h
@@ -38,6 +38,8 @@
 #define INPUT_SEED_LEN                 4
 #define INPUT_LABEL_LEN                5
 
+#define CRYPTO_1_0
+
 extern const uint8_t key_data[];
 
 extern const uint8_t rsa_128_key_pair[];
diff --git a/api-tests/platform/targets/common/nspe/crypto/pal_crypto_intf.c b/api-tests/platform/targets/common/nspe/crypto/pal_crypto_intf.c
index 7d8e633..8ef5e99 100644
--- a/api-tests/platform/targets/common/nspe/crypto/pal_crypto_intf.c
+++ b/api-tests/platform/targets/common/nspe/crypto/pal_crypto_intf.c
@@ -267,7 +267,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 			cipher_operation         =  va_arg(valist, psa_cipher_operation_t *);
 			return psa_cipher_abort(cipher_operation);
 			break;
-#if HOST_GCC_MISSING_CRYPTO_1_0 == 0
 		case PAL_CRYPTO_CIPHER_DECRYPT:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
@@ -284,7 +283,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 									  output_size,
 									  p_output_length);
 			break;
-#endif
 		case PAL_CRYPTO_CIPHER_DECRYPT_SETUP:
 			cipher_operation         = va_arg(valist, psa_cipher_operation_t *);
 			key                      = va_arg(valist, psa_key_id_t);
@@ -293,7 +291,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 											key,
 											alg);
 			break;
-#if HOST_GCC_MISSING_CRYPTO_1_0 == 0
 		case PAL_CRYPTO_CIPHER_ENCRYPT:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
@@ -310,7 +307,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 									  output_size,
 									  p_output_length);
 			break;
-#endif
 		case PAL_CRYPTO_CIPHER_ENCRYPT_SETUP:
 			cipher_operation         = va_arg(valist, psa_cipher_operation_t *);
 			key                      = va_arg(valist, psa_key_id_t);
@@ -648,7 +644,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 			mac_operation            = va_arg(valist, psa_mac_operation_t *);
 			return psa_mac_abort(mac_operation);
 			break;
-#ifdef CRYPTO_1_0
 		case PAL_CRYPTO_MAC_COMPUTE:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
@@ -665,7 +660,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 								   output_size,
 								   p_output_length);
 			break;
-#endif
 		case PAL_CRYPTO_MAC_OPERATION_INIT:
 			mac_operation            = va_arg(valist, psa_mac_operation_t *);
 			mac_operation_temp       = psa_mac_operation_init();
@@ -699,7 +693,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 								  input,
 								  input_length);
 			break;
-#if HOST_GCC_MISSING_CRYPTO_1_0 == 0
 		case PAL_CRYPTO_MAC_VERIFY:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
@@ -714,7 +707,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 								  input1,
 								  input_length1);
 			break;
-#endif
 		case PAL_CRYPTO_MAC_VERIFY_FINISH:
 			mac_operation            = va_arg(valist, psa_mac_operation_t *);
 			input                    = va_arg(valist, const uint8_t *);
@@ -814,7 +806,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 								 output_size,
 								 p_output_length);
 			break;
-#ifdef CRYPTO_1_0
 		case PAL_CRYPTO_SIGN_MESSAGE:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
@@ -845,7 +836,6 @@ int32_t pal_crypto_function(int type, va_list valist)
 									  input1,
 									  input_length1);
 			break;
-#endif
 		case PAL_CRYPTO_VERIFY_HASH:
 			key                      = va_arg(valist, psa_key_id_t);
 			alg                      = va_arg(valist, psa_algorithm_t);
-- 
2.17.1

